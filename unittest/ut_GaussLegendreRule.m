% ---------------------------------------------------------------------------- %
% _______/\\\\\\\\\\\\_________________________/\\\\\\\\\\\\__________________ %
% _______\/\\\////////\\\_____________________/\\\//////////__________________ %
% ________\/\\\______\//\\\___________________/\\\____________________________ %
% _________\/\\\_______\/\\\__________________\/\\\____/\\\\\\\_______________ %
% __________\/\\\_______\/\\\ iscontinuous_____\/\\\___\/////\\\ alerkin______ %
% ___________\/\\\_______\/\\\__________________\/\\\_______\/\\\_____________ %
% ____________\/\\\_______/\\\___________________\/\\\_______\/\\\____________ %
% _____________\/\\\\\\\\\\\\/____________________\//\\\\\\\\\\\\/____________ %
% ______________\////////////_______________________\////////////_____________ %
%                                                                              %
% ---------------------------------------------------------------------------- %
%                                                                              %
% Description:  Test integration with Gauss-Legendre rule on [0,1]             %
%                                                                              %
% ---------------------------------------------------------------------------- %
function ut_GaussLegendreRule()

  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  %%%%%                               BEGIN                                %%%%%
  correct = true;
  name = "Exact integration on [0,1]";

  % PREPARATION:

  sums = 0;
  
  a = 0;
  b = 1;

  % Exact integral
  int = [      1,     0.5,       5/6,      7/12,       47/60,       37/60, ...
         319/420, 533/840, 1879/2520, 1627/2520, 20417/27720, 18107/27720];

  for Q = 0:11

    [x, w] = GaussLegendreRule(Q, a, b);
    nip = length(x);

    % Generate f(x) = 1 - x + x^2 - x^3 + x^4 ...
    f = zeros(size(x));
    for i = 0:Q
      f = f + (-1)^i*x.^i;
    end

    num_int = 0;
    for j = 1:nip
      num_int = num_int + w(j)*f(j);
    end

    sums = sums + abs(int(Q+1) - num_int);

  end 


  % TEST:
  if sums > 1e-13
    correct = false;
  end

  msg(correct, name, dbstack);
  %%%%%                                END                                 %%%%%
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

end